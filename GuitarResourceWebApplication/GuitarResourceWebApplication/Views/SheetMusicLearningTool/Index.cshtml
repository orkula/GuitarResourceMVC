
@{
    ViewBag.Title = "Index";
}

 @*Notes can be suffixed by the following accidentals: #, ##, @, @@, and n signifying sharp, double-sharp, flat, double-flat, and natural, respectively.*@ 
<script>

    var noteArray = ["A", "A#", "B", "C", "C#", "D", "D#", "E", "F", "F#", "G", "G#"];
    var stringsArray = ["1", "2", "3", "4", "5", "6"];
    var noteArrayCopy = noteArray.slice();
    var stringsArrayCopy = stringsArray.slice();
    var canvas;

    function clearCanvas() {
        canvas.innerText = "";
    }

    function resetNoteArray() {
        if (noteArrayCopy.length === 0)
            noteArrayCopy = noteArray.slice();
    }

    function spliceRandomItemFromArray(array) {
        var randomItem = pickRandomItemFromArray(array);
        var index = array.indexOf(randomItem);
        array.splice(index, 1);
        return randomItem;
    }

    function generateRandomNote() {
        var note = spliceRandomItemFromArray(noteArrayCopy);
        resetNoteArray();
        return note;
    }

    function generateRandomNoteAndDrawOnStave() {
        var string = generateRandomstring();
        var note = generateRandomNote();
        clearCanvas();
        drawNoteOnStave(note, string);
    }

    function resetstringsArray() {
        if (stringsArrayCopy.length === 0)
            stringsArrayCopy = stringsArray.slice();
    }

    function generateRandomstring() {
        var string = spliceRandomItemFromArray(stringsArrayCopy);
        resetstringsArray();
        return string;
    }

    function generateRandomstringAndDrawOnStave() {
        var string = generateRandomstring();
        clearCanvas();
        drawstringOnStave("");
    }

    $(document).ready(function () {
        var guitarResource = new GuitarResource();
        guitarResource.pickRandomItemFromArray(noteArray);

        canvas = document.getElementById("boo");
        generateRandomstringAndDrawOnStave();

        var button = document.getElementById("buttonrandomsheetmusic");
        button.onclick = function () {
            generateRandomstringAndDrawOnStave(string);
        }
    });

    function drawNoteOnStave(note, string) {
        VF = Vex.Flow;

        var renderer = new VF.Renderer(canvas, VF.Renderer.Backends.SVG);

        renderer.resize(400, 300);
        var context = renderer.getContext();
        context.setFont("Arial", 10, "").setBackgroundFillStyle("#eed");

        var stave = new VF.Stave(10, 40, 400);
        stave.addClef("treble").addTimeSignature("4/4");
        stave.setContext(context).draw();

        var notes = [
            new VF.StaveNote({ keys: [note+"/"+string], duration: "w" }),
        ];

        var voice = new VF.Voice({ num_beats: 4, beat_value: 4 });
        voice.addTickables(notes);

        var formatter = new VF.Formatter().joinVoices([voice]).format([voice], 400);
        voice.draw(context, stave);
    }

</script>

<div class="containe-fluid">
    <div class="row">
        <div class="col-sm-8 col-sm-offset-2">
            <img src=/images/sheetmusictool_heading.jpg class="img-responsive" style="padding: 12px 0px 12px 0px;" />
        </div>
    </div>
</div>


<div class="container-fluid">
    <div class="row">
        <div class="col-sm-4 col-sm-offset-4 text-center" style="padding: 12px 0px 12px 0px;">
            <div id="boo">

            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-4 col-sm-offset-4 text-center" style="padding-bottom: 20px;">
            <button type="button" id="buttonrandomsheetmusic" class="btn btn-warning btn-lg">-Generate-</button>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-3 col-sm-3">
            <p>Enter note and string number below</p>
        </div>
    </div>
</div>


<div class="container-fluid">
    <div class="row">
        <div class="col-md-3 col-sm-3">
            <form>
                Name note:<br>
                <input type="text" name="noteinput"><br>
                String number:<br>
                <input type="text" name="stringinput">
            </form>
        </div>
    </div>
</div>